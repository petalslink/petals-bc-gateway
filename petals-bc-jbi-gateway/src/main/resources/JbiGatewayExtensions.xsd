<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2015-2016 Linagora
 
 This program/library is free software: you can redistribute it and/or modify
 it under the terms of the GNU Lesser General Public License as published by
 the Free Software Foundation, either version 2.1 of the License, or (at your
 option) any later version.
 
 This program/library is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 for more details.
 
 You should have received a copy of the GNU Lesser General Public License
 along with this program/library; If not, see <http://www.gnu.org/licenses/>
 for the GNU Lesser General Public License version 2.1.
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://petals.ow2.org/components/petals-bc-jbi-gateway/version-1.0"
   xmlns:cdk="http://petals.ow2.org/components/extensions/version-5" xmlns:jbi="http://java.sun.com/xml/ns/jbi"
   xmlns:jg="http://petals.ow2.org/components/petals-bc-jbi-gateway/version-1.0" elementFormDefault="qualified">

   <xs:import namespace="http://java.sun.com/xml/ns/jbi" />
   <xs:import namespace="http://petals.ow2.org/components/extensions/version-5" />

   <!-- 1) Component configuration -->

   <xs:complexType name="JbiTransportListener">
      <xs:annotation>
         <xs:documentation>Define a transport that will be listening for exchange from consumer domains declared in SUs.
         </xs:documentation>
      </xs:annotation>
      <!-- the elements are the parameters that could be transport specific in the future... -->
      <xs:all>
         <xs:element name="port" type="xs:int" default="7500" />
      </xs:all>
      <xs:attribute name="id" type="xs:string" use="required" />
   </xs:complexType>
   
   <!-- To be used in component and services -->
   <xs:element name="transport-listener" type="jg:JbiTransportListener" />

   <!-- this is only here for documentation -->
<!--    <xs:complexType name="Component"> -->
<!--       <xs:complexContent> -->
<!--          <xs:extension base="jbi:Component"> -->
<!--             <xs:sequence> -->
<!--                If set to true, then SU can't declare listeners -->
<!--                <xs:element name="restrict-to-component-listeners" type="cdk:settableboolean" default="false" /> -->
<!--                For external listeners: transports with [id, type (defined by component), configuration] -->
<!--                <xs:element name="transport-listener" type="jg:JbiTransporterListener" minOccurs="0" -->
<!--                   maxOccurs="unbounded" /> -->
<!--             </xs:sequence> -->
<!--          </xs:extension> -->
<!--       </xs:complexContent> -->
<!--    </xs:complexType> -->
   
   <!-- 2) SU configuration -->
   
   <!-- 2a) Services configuration -->

   <xs:complexType name="JbiProviderDomain">
      <xs:annotation>
         <xs:documentation>Define the provider domains from which services they provide will be propagated.
         </xs:documentation>
      </xs:annotation>
      <!-- the elements are the parameters that could be transport specific in the future... 
            Also they are all replaced with the placeholders at runtime! -->
      <xs:all>
         <xs:element name="ip" type="xs:string" />
         <!-- it must be string because it supports placeholders -->
         <xs:element name="port" type="xs:string" default="7500" />
         <!-- Shared identifier with consumer domain -->
         <xs:element name="auth-name" type="xs:string" />
      </xs:all>
      <xs:attribute name="id" type="xs:string" use="required" />
      <xs:attribute name="propagate-all" type="xs:boolean" default="true" />
   </xs:complexType>
   
   <!-- To be used in services -->
   <xs:element name="provider-domain" type="jg:JbiProviderDomain" />

   <xs:complexType name="JbiConsumerDomain">
      <xs:annotation>
         <xs:documentation>Define the consumer domains that will be able to propagate services we provide.</xs:documentation>
      </xs:annotation>
      <!-- the elements are the parameters that could be transport specific in the future... 
            Also they are all replaced with the placeholders at runtime! -->
      <xs:all>
         <!-- Shared identifier with provider domain -->
         <xs:element name="auth-name" type="xs:string" />
      </xs:all>
      <xs:attribute name="id" type="xs:string" use="required" />
      <!-- id of the transport listener used -->
      <xs:attribute name="transport" type="xs:string" use="required" />
   </xs:complexType>
   
   <!-- To be used in services -->
   <xs:element name="consumer-domain" type="jg:JbiConsumerDomain" />

   <!-- this is only here for documentation -->
<!--    <xs:complexType name="Services"> -->
<!--       <xs:complexContent> -->
<!--          <xs:extension base="jbi:Services"> -->
<!--             <xs:sequence> -->
<!--                Used by Provides: provider domains with [id, transport with  -->
<!--                     [type (defined by component), configuration (ip, port, etc)]] -->
<!--                <xs:element name="provider-domain" type="jg:JbiProviderDomain" minOccurs="0" maxOccurs="unbounded" /> -->
<!--                Used by Consumes: consumer domains with  -->
<!--                     [id, transport id, transport configuration for this domain] -->
<!--                <xs:element name="consumer-domain" type="jg:JbiConsumerDomain" minOccurs="0" maxOccurs="unbounded" /> -->
<!--                For external listeners: transports with [id, type (defined by component), configuration] -->
<!--                <xs:element name="transport-listener" type="jg:JbiTransporterListener" minOccurs="0" -->
<!--                   maxOccurs="unbounded" /> -->
<!--             </xs:sequence> -->
<!--          </xs:extension> -->
<!--       </xs:complexContent> -->
<!--    </xs:complexType> -->
   
   <!-- 2b) Provides configuration -->

   <!-- Provider domain ids, endpoint/service/interface renaming -->
   <xs:complexType name="JbiProvidesConfig">
      <xs:all>
         <xs:element name="provider-interface-name" type="xs:QName" minOccurs="1">
            <xs:annotation>
               <xs:documentation>The interface name of the Consumes service declared in the provider domain.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="provider-service-name" type="xs:QName" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The service name of the Consumes service declared in the provider domain.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="provider-endpoint-name" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The endpoint of the Consumes service declared in the provider domain.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
      <xs:attribute name="domain" type="xs:string" use="required">
         <xs:annotation>
            <xs:documentation>The id of the provider domain that provide this service.</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>


   <!-- To be used in provides -->
   <xs:element name="provider" type="jg:JbiProvidesConfig" />

<!--    <xs:complexType name="Provides"> -->
<!--       <xs:complexContent> -->
<!--          <xs:extension base="jbi:Provides"> -->
<!--             <xs:sequence> -->
<!--                <xs:element name="provider-mapping" type="jg:JbiProviderMapping" /> -->
<!--             </xs:sequence> -->
<!--          </xs:extension> -->
<!--       </xs:complexContent> -->
<!--    </xs:complexType> -->
   
   <!-- 2c) Consumes configuration -->

   <!-- Consumer domain ids -->
   <xs:complexType name="JbiConsumesConfig">
      <xs:attribute name="domain" type="xs:string" use="required">
         <xs:annotation>
            <xs:documentation>The id of the consumer domain that can propagate this particular service.
            </xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>

   <!-- To be used in consumes -->
   <xs:element name="consumer" type="jg:JbiConsumesConfig" />

<!--    <xs:complexType name="Consumes"> -->
<!--       <xs:complexContent> -->
<!--          <xs:extension base="jbi:Consumes"> -->
<!--             <xs:sequence> -->
<!--                <xs:element name="consumer-mapping" type="jg:JbiConsumerMapping" maxOccurs="unbounded" /> -->
<!--             </xs:sequence> -->
<!--          </xs:extension> -->
<!--       </xs:complexContent> -->
<!--    </xs:complexType> -->
</xs:schema>